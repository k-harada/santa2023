def merge_flips(path_1, path_2, sub=False):
    f1 = [-1]
    path_split_1 = [[]]
    f2 = [-1]
    path_split_2 = [[]]
    st = -1
    ind = 0
    for m in path_1:
        add_flag = True
        if m[0] == "f":
            new_st = int(m[1:])
            if st == -1:
                f1.append(int(m[1:]))
                st = int(m[1:])
                ind += 1
                path_split_1.append([])
            elif st == new_st:
                f1.append(-1)
                st = -1
                path_split_1[ind].append(m)
                ind += 1
                path_split_1.append([])
                add_flag = False
            else:
                # ２重の反転
                pass
        if add_flag:
            path_split_1[ind].append(m)

    st = -1
    ind = 0
    for m in path_2:
        add_flag = True
        if m[0] == "f":
            new_st = int(m[1:])
            if st == -1:
                f2.append(int(m[1:]))
                st = int(m[1:])
                ind += 1
                path_split_2.append([])
            elif st == new_st:
                f2.append(-1)
                st = -1
                path_split_2[ind].append(m)
                ind += 1
                path_split_2.append([])
                add_flag = False
            else:
                # ２重の反転
                pass
        if add_flag:
            path_split_2[ind].append(m)
    # print(f1)
    # print(f2)
    # print(len(f1), len(f2))
    dp = [[0] * (len(f2) + 1) for _ in range(len(f1) + 1)]
    for i in range(len(f1)):
        for j in range(len(f2)):
            dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j])
            if f1[i] == f2[j] >= 0:
                if not sub:
                    c, path = merge_flips(path_split_1[i][1:-1], path_split_2[j][1:-1], sub=True)
                    dp[i + 1][j + 1] = max(dp[i + 1][j + 1], dp[i][j] + 2 + c)
                else:
                    dp[i + 1][j + 1] = max(dp[i + 1][j + 1], dp[i][j] + 2)
    # print(dp[-1][-1])
    path = []
    i, j = len(f1), len(f2)
    while i > 0 or j > 0:
        if i > 0 and dp[i - 1][j] == dp[i][j]:
            path = path_split_1[i - 1] + path
            i -= 1
        elif j > 0 and dp[i][j - 1] == dp[i][j]:
            path = path_split_2[j - 1] + path
            j -= 1
        else:
            _, add = merge_flips(path_split_1[i - 1][1:-1], path_split_2[j - 1][1:-1], sub=True)
            path = [path_split_1[i - 1][0]] + add + [path_split_1[i - 1][0]] + path
            i -= 1
            j -= 1

    return dp[-1][-1], path


if __name__ == "__main__":
    _xxx = [['f17', 'r0', '-r3', 'f17', 'r3', 'f0', '-r0', 'f0', 'f1', '-r0', 'f1', 'f2', '-r0', 'f2', 'f4', '-r0', 'f4', 'f11', '-r0', 'f11', 'f13', '-r0', 'f13', 'f20', '-r0', 'f20', 'f22', '-r0', 'f22', 'f23', '-r0', 'f23', 'f30', '-r0', 'f30', 'f31', '-r0', 'f31', 'f19', 'r3', 'f19', 'f9', '-r0', 'f9', 'f13', '-r0', 'f13', 'f18', '-r0', 'f18', 'f24', '-r0', 'f24', 'f27', '-r0', 'f27', 'f29', '-r0', 'f29', 'f0', 'r3', 'f0', 'f21', 'r3', 'f21', 'f11', '-r0', 'f11', 'f12', '-r0', 'f12', 'f14', '-r0', 'f14', 'f5', '-r0', 'f5', 'f10', '-r0', 'f10', 'f12', '-r0', 'f12', 'f16', '-r0', 'f16', 'f29', 'r3', 'f29', 'f9', '-r0', 'f9', 'r0', 'r0', 'f29', 'r3', 'f29', 'f19', 'r3', 'f19', 'r0', 'r0', 'r0', 'r0', 'f21', 'r3', 'f21', 'f31', '-r0', 'f31', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'f24', '-r0', 'f24', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'f22', '-r0', 'f22', 'r0', 'r0', 'r0', 'r0', 'r0', 'f19', '-r0', 'f19', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'f18', '-r0', 'f18', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'f5', '-r0', 'f5', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', '-r3', '-r3', 'f11', 'r0', '-r3', 'f48', '-r0', 'r3', 'f48', 'f11', '-r3', 'f9', 'r0', '-r3', 'f46', '-r0', 'r3', 'f46', 'f9', '-r0', '-r0', 'r3', 'r3', 'r3', 'r3', 'f11', '-r0', 'f56', 'r0', '-r3', 'f56', 'r3', 'f11', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'f22', '-r0', 'f45', 'r0', '-r3', 'f45', 'r3', 'f22', '-r0', 'f20', 'r0', '-r3', 'f3', '-r0', 'r3', 'f3', 'f20', '-r0', 'f16', '-r0', 'f34', 'r0', '-r3', 'f34', 'r3', 'f16', '-r0', 'r3', 'f2', 'r0', '-r3', 'f46', '-r0', 'r3', 'f46', 'f2', '-r0', '-r0', 'f27', 'r0', '-r3', 'f14', '-r0', 'r3', 'f14', 'f27', '-r3', 'f11', 'r0', '-r3', 'f64', '-r0', 'r3', 'f64', 'f11', 'r0', '-r3', '-r3', '-r3', 'f5', 'r0', '-r3', 'f55', '-r0', 'r3', 'f55', 'f5', 'r0', 'r0', 'r0', '-r3', 'f27', '-r0', 'f6', 'r0', '-r3', 'f6', 'r3', 'f27', 'r0', 'r0', 'r0', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', '-r3', 'f0', '-r0', 'f21', 'r0', '-r3', 'f21', 'r3', 'f0', '-r3', 'f5', 'r0', '-r3', 'f60', '-r0', 'r3', 'f60', 'f5', '-r0', '-r0', 'r3', 'r3', 'r3', 'f16', 'r0', '-r3', 'f6', '-r0', 'r3', 'f6', 'f16', 'r0', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'f0', '-r0', 'f24', 'r0', '-r3', 'f24', 'r3', 'f0', '-r3', '-r3', 'f30', '-r0', 'f53', 'r0', '-r3', 'f53', 'r3', 'f30', '-r0', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'f22', '-r0', 'f46', 'r0', '-r3', 'f46', 'r3', 'f22', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', 'f22', '-r0', 'f63', 'r0', '-r3', 'f63', 'r3', 'f22', 'f16', 'r0', '-r3', 'f55', '-r0', 'r3', 'f55', 'f16', 'r0', 'r3', 'r3', 'f12', '-r0', 'f40', 'r0', '-r3', 'f40', 'r3', 'f12', '-r0', '-r3', 'f25', 'r0', '-r3', 'f18', '-r0', 'r3', 'f18', 'f25', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', 'r0', '-r3', '-r3', '-r3', 'f0', '-r0', 'f27', 'r0', '-r3', 'f27', 'r3', 'f0', 'r0', 'r0', 'r0', 'r0', '-r3', '-r3', 'f11', 'r0', '-r3', 'f0', '-r0', 'r3', 'f0', 'f11', 'r0', 'f29', '-r0', 'f58', 'r0', '-r3', 'f58', 'r3', 'f29', '-r0', '-r3', '-r3', 'f0', 'r0', '-r3', 'f27', '-r0', 'r3', 'f27', 'f0', 'r0', '-r3', 'f15', '-r0', 'f45', 'r0', '-r3', 'f45', 'r3', 'f15', '-r3', '-r3', 'f4', '-r0', 'f32', 'r0', '-r3', 'f32', 'r3', 'f4', '-r0', 'r3', 'r3', 'f1', 'r0', '-r3', 'f63', '-r0', 'r3', 'f63', 'f1', 'r3', 'f30', 'r0', '-r3', 'f27', '-r0', 'r3', 'f27', 'f30', '-r0', 'f11', '-r0', 'f42', 'r0', '-r3', 'f42', 'r3', 'f11', 'r3', 'f13', '-r0', 'f50', 'r0', '-r3', 'f50', 'r3', 'f13', 'r3', 'f1', '-r0', 'f31', 'r0', '-r3', 'f31', 'r3', 'f1', '-r0', '-r0', '-r0', 'r3', 'r3', 'r3', 'f11', '-r0', 'f49', 'r0', '-r3', 'f49', 'r3', 'f11', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', 'r3', 'r3', 'f11', '-r0', 'f48', 'r0', '-r3', 'f48', 'r3', 'f11', 'r0', '-r3', '-r3', '-r3', 'f16', 'r0', '-r3', 'f52', '-r0', 'r3', 'f52', 'f16', 'r0', 'f26', '-r0', 'f54', 'r0', '-r3', 'f54', 'r3', 'f26', '-r0', 'r3', 'f22', 'r0', '-r3', 'f20', '-r0', 'r3', 'f20', 'f22', 'r0', 'r0', '-r3', 'f0', '-r0', 'f36', 'r0', '-r3', 'f36', 'r3', 'f0', 'r0', 'r0', 'r0', 'f27', '-r0', 'f58', 'r0', '-r3', 'f58', 'r3', 'f27', 'f10', '-r0', 'f41', 'r0', '-r3', 'f41', 'r3', 'f10', '-r0', 'r3', 'f30', 'r0', '-r3', 'f29', '-r0', 'r3', 'f29', 'f30', 'f32', 'r0', '-r3', 'f30', '-r0', 'r3', 'f30', 'r0', '-r3', 'f1', '-r0', 'r3', 'f1', 'f32', 'r0', 'f17', '-r0', 'f49', 'r0', '-r3', 'f49', 'r3', 'f17', 'r0', 'r0', '-r3', 'f0', '-r0', 'f36', 'r0', '-r3', 'f36', 'r3', 'f0', 'f28', '-r0', 'f63', 'r0', '-r3', 'f63', 'r3', 'f28', '-r0', 'r3', 'f5', 'r0', '-r3', 'f40', '-r0', 'r3', 'f40', 'f5', '-r3', 'f11', 'r0', '-r3', 'f48', '-r0', 'r3', 'f48', 'f11', 'r0', 'r3', 'f11', '-r0', 'f47', 'r0', '-r3', 'f47', 'r3', 'f11', 'r3', 'f16', '-r0', 'f49', 'r0', '-r3', 'f49', 'r3', 'f16', 'r3', 'f5', '-r0', 'f40', 'r0', '-r3', 'f40', 'r3', 'f5', 'f9', '-r0', 'f42', 'r0', '-r3', 'f42', 'r3', 'f9', 'f1', '-r0', 'f35', 'r0', '-r3', 'f35', 'r3', 'f1', 'f13', '-r0', 'f47', 'r0', '-r3', 'f47', 'r3', 'f13', 'f25', '-r0', 'f59', 'r0', '-r3', 'f59', 'r3', 'f25', 'f31', '-r0', 'f65', 'r0', '-r3', 'f65', 'r3', 'f31', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', '-r0', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3', 'r3'], ['f20', 'r1', '-r2', 'f20', 'r2', 'f15', '-r1', 'f15', 'f16', '-r1', 'f16', 'f24', '-r1', 'f24', 'f25', '-r1', 'f25', 'f26', '-r1', 'f26', 'f27', '-r1', 'f27', 'f30', '-r1', 'f30', 'f6', 'r2', 'f6', 'f8', 'r2', 'f8', 'f9', 'r2', 'f9', 'f10', 'r2', 'f10', 'f11', 'r2', 'f11', 'f21', 'r2', 'f21', 'f29', 'r2', 'f29', 'f5', '-r1', 'f5', 'f6', '-r1', 'f6', 'f15', '-r1', 'f15', 'f19', '-r1', 'f19', 'f20', '-r1', 'f20', 'f29', '-r1', 'f29', 'f27', 'r2', 'f27', 'f6', '-r1', 'f6', 'f8', '-r1', 'f8', 'f12', '-r1', 'f12', 'f21', '-r1', 'f21', 'f1', 'r2', 'f1', 'f6', 'r2', 'f6', 'r1', 'r1', 'f9', '-r1', 'f9', 'r1', 'r1', 'f8', '-r1', 'f8', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f29', '-r1', 'f29', 'r1', 'f22', 'r2', 'f22', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f25', 'r2', 'f25', 'f16', '-r1', 'f16', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f14', '-r1', 'f14', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f13', '-r1', 'f13', 'r1', 'r1', 'r1', 'r1', 'f11', '-r1', 'f11', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f25', 'r2', 'f25', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'f21', 'r2', 'f21', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', '-r2', '-r2', '-r2', '-r2', '-r2', '-r2', '-r2', '-r2', 'f11', 'r1', '-r2', 'f3', '-r1', 'r2', 'f3', 'f11', 'r2', 'r2', 'f6', 'r1', '-r2', 'f63', '-r1', 'r2', 'f63', 'f6', 'r1', 'r1', 'r1', 'r1', '-r2', 'f16', 'r1', '-r2', 'f3', '-r1', 'r2', 'f3', 'f16', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', '-r2', 'f0', '-r1', 'f18', 'r1', '-r2', 'f18', 'r2', 'f0', '-r1', '-r2', 'f18', 'r1', '-r2', 'f1', '-r1', 'r2', 'f1', 'f18', '-r2', 'f30', 'r1', '-r2', 'f15', '-r1', 'r2', 'f15', 'f30', 'r1', 'r1', 'r1', '-r2', 'f11', '-r1', 'f59', 'r1', '-r2', 'f59', 'r2', 'f11', '-r2', '-r2', 'f22', '-r1', 'f0', 'r1', '-r2', 'f0', 'r2', 'f22', '-r1', '-r1', '-r1', '-r1', '-r1', 'r2', 'f16', 'r1', '-r2', 'f62', '-r1', 'r2', 'f62', 'f16', '-r1', 'r2', 'f5', '-r1', 'f52', 'r1', '-r2', 'f52', 'r2', 'f5', '-r1', 'f27', '-r1', 'f4', 'r1', '-r2', 'f4', 'r2', 'f27', 'r2', 'r2', 'f22', '-r1', 'f46', 'r1', '-r2', 'f46', 'r2', 'f22', 'r1', 'r1', 'r1', 'f22', '-r1', 'f48', 'r1', '-r2', 'f48', 'r2', 'f22', '-r2', '-r2', '-r2', 'f20', '-r1', 'f0', 'r1', '-r2', 'f0', 'r2', 'f20', '-r1', '-r1', '-r1', 'r2', 'f27', 'r1', '-r2', 'f18', '-r1', 'r2', 'f18', 'f27', 'r1', 'r2', 'r2', 'r2', 'f1', '-r1', 'f46', 'r1', '-r2', 'f46', 'r2', 'f1', 'r2', 'f22', '-r1', 'f49', 'r1', '-r2', 'f49', 'r2', 'f22', 'r1', 'r1', 'f0', 'r1', '-r2', 'f6', '-r1', 'r2', 'f6', 'f0', '-r1', 'f27', '-r1', 'f1', 'r1', '-r2', 'f1', 'r2', 'f27', '-r1', '-r1', '-r1', 'f11', '-r1', 'f52', 'r1', '-r2', 'f52', 'r2', 'f11', '-r2', '-r2', '-r2', '-r2', 'f21', '-r1', 'f46', 'r1', '-r2', 'f46', 'r2', 'f21', '-r1', 'f1', 'r1', '-r2', 'f8', '-r1', 'r2', 'f8', 'f1', '-r1', '-r1', 'r2', 'r2', 'f11', '-r1', 'f51', 'r1', '-r2', 'f51', 'r2', 'f11', 'r2', 'f25', '-r1', 'f63', 'r1', '-r2', 'f63', 'r2', 'f25', '-r1', '-r1', '-r1', '-r1', '-r1', '-r1', '-r1', '-r1', 'r2', 'f0', '-r1', 'f28', 'r1', '-r2', 'f28', 'r2', 'f0', '-r1', '-r2', 'f30', 'r1', '-r2', 'f23', '-r1', 'r2', 'f23', 'f30', 'r1', '-r2', '-r2', 'f19', '-r1', 'f56', 'r1', '-r2', 'f56', 'r2', 'f19', '-r2', 'f5', 'r1', '-r2', 'f2', '-r1', 'r2', 'f2', 'f5', 'r2', 'f3', 'r1', '-r2', 'f39', '-r1', 'r2', 'f39', 'f3', 'f14', 'r1', '-r2', 'f51', '-r1', 'r2', 'f51', 'f14', '-r2', '-r2', 'f22', 'r1', '-r2', 'f57', '-r1', 'r2', 'f57', 'f22', 'r1', 'r1', '-r2', '-r2', '-r2', 'f11', '-r1', 'f41', 'r1', '-r2', 'f41', 'r2', 'f11', 'r1', 'r1', 'r1', '-r2', 'f22', 'r1', '-r2', 'f18', '-r1', 'r2', 'f18', 'f22', '-r1', 'f11', 'r1', '-r2', 'f47', '-r1', 'r2', 'f47', 'f11', 'f25', 'r1', '-r2', 'f23', '-r1', 'r2', 'f23', 'f25', '-r2', 'f0', 'r1', '-r2', 'f30', '-r1', 'r2', 'f30', 'f0', 'f32', 'r1', '-r2', 'f30', '-r1', 'r2', 'f30', 'f32', 'r2', 'f5', '-r1', 'f35', 'r1', '-r2', 'f35', 'r2', 'f5', '-r1', 'f31', 'r1', '-r2', 'f1', '-r1', 'r2', 'f1', 'f31', '-r2', 'f10', 'r1', '-r2', 'f7', '-r1', 'r2', 'f7', 'f10', 'r1', 'f22', 'r1', '-r2', 'f57', '-r1', 'r2', 'f57', 'f22', 'f2', 'r1', '-r2', 'f1', '-r1', 'r2', 'f1', 'f2', 'f6', 'r1', '-r2', 'f4', '-r1', 'r2', 'f4', 'f6', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', 'r1', '-r2', 'f11', '-r1', 'f40', 'r1', '-r2', 'f40', 'r2', 'f11', '-r1', '-r2', 'f11', 'r1', '-r2', 'f9', '-r1', 'r2', 'f9', 'f11', 'r1', 'f27', '-r1', 'f62', 'r1', '-r2', 'f62', 'r2', 'f27', '-r2', 'f0', '-r1', 'f30', 'r1', '-r2', 'f30', 'r2', 'f0', '-r2', 'f7', '-r1', 'f38', 'r1', '-r2', 'f38', 'r2', 'f7', '-r2', 'f13', '-r1', 'f44', 'r1', '-r2', 'f44', 'r2', 'f13', '-r1', '-r2', 'f2', 'r1', '-r2', 'f36', '-r1', 'r2', 'f36', 'f2', 'f19', 'r1', '-r2', 'f17', '-r1', 'r2', 'f17', 'r1', '-r2', 'f53', '-r1', 'r2', 'f53', 'f19', 'f27', 'r1', '-r2', 'f61', '-r1', 'r2', 'f61', 'f27', 'f31', 'r1', '-r2', 'f65', '-r1', 'r2', 'f65', 'f31', 'r1', 'f5', '-r1', 'f38', 'r1', '-r2', 'f38', 'r2', 'f5', 'f22', '-r1', 'f55', 'r1', '-r2', 'f55', 'r2', 'f22', 'f28', '-r1', 'f61', 'r1', '-r2', 'f61', 'r2', 'f28', 'f8', '-r1', 'f42', 'r1', '-r2', 'f42', 'r2', 'f8', 'f13', '-r1', 'f47', 'r1', '-r2', 'f47', 'r2', 'f13', 'r1', 'r1', 'r1', 'r1', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2', 'r2']]
    _res, _path = merge_flips(_xxx[0], _xxx[1])
    print(_path)

